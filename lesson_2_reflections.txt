---What happens when you initialize a repository? Why do you need to do it?
///Git prepare a hidden directory. To know where the commits will be.

---How is the staging area different from the working directory and the repository? What value do you think it offers?
///The staging area serves as a temporary platform between the working directory and the respository.
It keeps the other platforms cleaner.

 ---How can you use the staging area to make sure you have one commit per logical change?
 ///Check the status before committing anything, or maybe there's an option to lock the size of the commit.

 ---What are some situations when branches would be helpful in keeping your history organized? How would branches help?
 ///When adding extra features to a project, it would help to know what was the main project. To maintain the different codes separated.

 ---How do the diagrams help you visualize the branch structure?
 ///It gives an image, so it is easier to understand what we went through.

 ---What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 ///It fusions both of the files, creating a new branch with all the commits from both side. 
 Because it is the right way to represent them.

 ---What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
 ///Merging automatically is good if we forget about it, while merging manually let us make commits with better logics.